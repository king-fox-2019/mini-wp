{"id":"node_modules/fault/index.js","dependencies":[{"name":"/home/risan/Desktop/Hacktiv8/Phase 2.2/Week_2/mini-wp-1/CLIENT/package.json","includedInParent":true,"mtime":1575707230826},{"name":"/home/risan/Desktop/Hacktiv8/Phase 2.2/Week_2/mini-wp-1/CLIENT/node_modules/fault/package.json","includedInParent":true,"mtime":1575707165981},{"name":"format","loc":{"line":3,"column":24},"parent":"/home/risan/Desktop/Hacktiv8/Phase 2.2/Week_2/mini-wp-1/CLIENT/node_modules/fault/index.js","resolved":"/home/risan/Desktop/Hacktiv8/Phase 2.2/Week_2/mini-wp-1/CLIENT/node_modules/format/format.js"}],"generated":{"js":"'use strict'\n\nvar formatter = require('format')\n\nvar fault = create(Error)\n\nmodule.exports = fault\n\nfault.eval = create(EvalError)\nfault.range = create(RangeError)\nfault.reference = create(ReferenceError)\nfault.syntax = create(SyntaxError)\nfault.type = create(TypeError)\nfault.uri = create(URIError)\n\nfault.create = create\n\n// Create a new `EConstructor`, with the formatted `format` as a first argument.\nfunction create(EConstructor) {\n  FormattedError.displayName = EConstructor.displayName || EConstructor.name\n\n  return FormattedError\n\n  function FormattedError(format) {\n    if (format) {\n      format = formatter.apply(null, arguments)\n    }\n\n    return new EConstructor(format)\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/fault/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/fault/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"node_modules/fault/index.js":"'use strict'\n\nvar formatter = require('format')\n\nvar fault = create(Error)\n\nmodule.exports = fault\n\nfault.eval = create(EvalError)\nfault.range = create(RangeError)\nfault.reference = create(ReferenceError)\nfault.syntax = create(SyntaxError)\nfault.type = create(TypeError)\nfault.uri = create(URIError)\n\nfault.create = create\n\n// Create a new `EConstructor`, with the formatted `format` as a first argument.\nfunction create(EConstructor) {\n  FormattedError.displayName = EConstructor.displayName || EConstructor.name\n\n  return FormattedError\n\n  function FormattedError(format) {\n    if (format) {\n      format = formatter.apply(null, arguments)\n    }\n\n    return new EConstructor(format)\n  }\n}\n"},"lineCount":32}},"error":null,"hash":"465005c3b598f7675feda96543c44640","cacheData":{"env":{}}}